cmake_minimum_required(VERSION 3.16)

project(WisdomChessQtQml VERSION 0.1 LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_AUTOMOC ON)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

find_package(Qt6 6.4 COMPONENTS Quick svg REQUIRED)
if (WIN32)
    set(app_icon_resource_windows "${CMAKE_CURRENT_SOURCE_DIR}/images/Chess-icons.rc")
elseif (APPLE)
    # The MACOSX_BUNDLE_ICON_FILE variable is added to the Info.plist
    # generated by CMake. This variable contains the .icns file name,
    # without the path.
    set(MACOSX_BUNDLE_ICON_FILE wisdom-chess.icns)

    # And the following tells CMake where to find and install the file itself.
    set(app_icon_macos "${CMAKE_CURRENT_SOURCE_DIR}/images/wisdom-chess.icns")
    set_source_files_properties(${app_icon_macos} PROPERTIES
           MACOSX_PACKAGE_LOCATION "Resources")
else()
    set(app_icon_resource_windows "")
    set(app_icon_macos "")
endif ()


qt_add_executable(appWisdomChessQtQml
    main/main.cpp
    main/gamemodel.hpp
    main/gamemodel.cpp
    main/piecesmodel.hpp
    main/piecesmodel.cpp
    main/chessgame.hpp
    main/chessgame.cpp
    main/chessengine.hpp
    main/chessengine.cpp
    main/ui_types.cpp
    main/ui_types.hpp
    main/ui_settings.hpp
    main/ui_settings.cpp
    main/game_settings.hpp
    main/game_settings.cpp
    ${app_icon_resource_windows}
    ${app_icon_macos}
)

if(ANDROID)
    set(PLATFORM_QML_FILES
        main/MobileRoot.qml
    )
    set(MAIN_QML_FILE main/mobile_main.qml)
elseif(EMSCRIPTEN)
    set(PLATFORM_QML_FILES
        main/DesktopRoot.qml
    )
    set(MAIN_QML_FILE main/wasm_main.qml)
else()
    set(PLATFORM_QML_FILES
        main/DesktopRoot.qml
    )
    set(MAIN_QML_FILE main/desktop_main.qml)
endif()

qt_add_qml_module(appWisdomChessQtQml
    URI WisdomChess
    VERSION 1.0
    QML_FILES
        main/Board.qml
        main/BoardDimensions.qml
        main/ChessSquare.qml
        popups/Dialogs.qml
        main/Piece.qml
        popups/GameMenu.qml
        popups/PromoteDropdown.qml
        popups/PromotedPieceModel.qml
        popups/DrawProposalDialog.qml
        popups/AboutDialog.qml
        popups/NewGameDialog.qml
        popups/SettingsDialog.qml
        popups/ConfirmQuitDialog.qml
        main/StatusBar.qml
        main/ImageToolButton.qml
        Helper.js
        ${PLATFORM_QML_FILES}
        ${MAIN_QML_FILE}
    RESOURCES
        images/Chess_bdt45.svg
        images/Chess_blt45.svg
        images/Chess_kdt45.svg
        images/Chess_klt45.svg
        images/Chess_ndt45.svg
        images/Chess_nlt45.svg
        images/Chess_pdt45.svg
        images/Chess_plt45.svg
        images/Chess_qdt45.svg
        images/Chess_qlt45.svg
        images/Chess_rdt45.svg
        images/Chess_rlt45.svg
        images/Chess_rlt256.png
        images/bx-icon-menu.svg
        images/bx-icon-menu-white.svg
        images/bx-icon-menu-white.png
        images/bxs-down-arrow.svg
        images/bxs-cog.svg
)

set_target_properties(appWisdomChessQtQml PROPERTIES
    MACOSX_BUNDLE_GUI_IDENTIFIER com.daveme.wisdomchess
    MACOSX_BUNDLE_BUNDLE_VERSION ${PROJECT_VERSION}
    MACOSX_BUNDLE_SHORT_VERSION_STRING ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
    MACOSX_BUNDLE TRUE
    WIN32_EXECUTABLE TRUE
)

if(ANDROID OR EMSCRIPTEN)
    target_compile_definitions(appWisdomChessQtQml PRIVATE USE_DEFAULT_GRAPHICS_BACKEND)
else()
    target_compile_definitions(appWisdomChessQtQml PRIVATE USE_OPENGL_GRAPHICS_BACKEND)
endif()

target_compile_definitions(appWisdomChessQtQml
    PRIVATE $<$<OR:$<CONFIG:Debug>,$<CONFIG:RelWithDebInfo>>:QT_QML_DEBUG>)
target_link_libraries(appWisdomChessQtQml
    PRIVATE Qt6::Quick Qt6::Svg)
target_link_libraries(appWisdomChessQtQml
    PRIVATE wisdom::chess)
target_compile_definitions(appWisdomChessQtQml
    PRIVATE MAIN_QML_FILE="${MAIN_QML_FILE}")
